[database]
    current = pickle

    # a very simple database - a pickled file on local disk
    # no locking takes place
    [[pickle]]
        factory = geats.databases.pickledatabase:PickleDatabase
	filename = /etc/geats.vms.pickle

    # an in-memory dummy database for testing purposes
    [[dummy]]
        factory = geats.databases.dummydatabase:DummyDatabase

[vms]
    # VMS have a name, a factory of the form "whichever.module:class",
    # a "valid_storage_types" key and attribute (comma separated list) if
    # applicable, and any VM-type-specific configuration

    # a dummy virtual machine for testing. State is maintained in-memory.
    [[dummy]]
        factory = geats.virtualmachine.dummy:DummyVirtualMachine

    # lxc will use the storage adapter to create/locate the mount point
    [[lxc]]
        factory = geats.virtualmachine.lxc:LXCVirtualMachine
        lxc_bin_path = /usr/bin
        cgroup_path = /sys/fs/cgroup/cpu/lxc
        template_path = /scratch/templates/lxc
        config_directory_prefix = /var/lib/lxc
        # default_rootfs_prefix, if provided, will tell us
        # where to create the rootfs if there's no
        # storage plugin (or it doesn't provide a directory)
        default_rootfs_prefix = /var/lib/lxc
        valid_storage_types = dummy, dummyadapter
        #valid_storage_types = dummy, dummyadapter, sparsefile_ext3_dir
        valid_templates = debian, debian-squeeze

    # a KVM virtual machine, using libvirt
    [[kvm]]
        factory = geats.virtualmachine.kvm:KVMVirtualMachine
        xml_template = "/etc/sippe/geats/templates/libvirt_kvm.xml"
        valid_storage_types = dummy

[storage]

    # dummy returns keys directly in the VM definition. Keys are:
    #   blockdevice
    #   directory
    #   filename
    [[dummy]]
        factory = geats.storage.dummystoragevolume:DummyStorageVolume

    # dummyadapter is a simple demonstration of a storage adapter.
    # it has an adapter_factory, which is is used to wrap the
    # DummyStorageVolume
    [[dummyadapter]]
        factory = geats.storage.dummystoragevolume:DummyStorageVolume
        adapter_factory = geats.storage.dummystorageadapter:DummyStorageAdapter

#    # this plugin is specific to VMs supporting libvirt, and provides
#    # more methods to create the storage XML.
#    [[libvirtpool]]
#        factory = geats.storage.libvirtpool:LibVirtPoolVolume
#
#    # this plugin will create a sparse file in a directory relative to
#    # volume_prefix, and the volume key must match volume_match
#    [[sparsefile]]
#        factory = geats.storage.sparsefile:SparsefileVolume
#        volume_prefix = /mnt/VMS
#        volume_match = ^[A-Z]+/[a-zA-Z0-9]+.raw
#
#    # this plugin adapts sparsefile and will format and mount a sparsefile
#    # using mkfs.ext3 and the loop option to the mount command.
#    [[sparsefile_ext3_dir]]
#        factory = geats.storage.sparsefile:SparsefileVolume
#        prefix = /mnt/VMS
#        adapter_factory = geats.storage.filesystem_adapter:FilesystemAdapter
#        block_filesystem_adapter_type = ext3
